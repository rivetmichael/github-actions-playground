on:
  push:
    branches:
      - main

name: test

jobs:
  checks:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: requirements
        uses: actions/github-script@v6
        with:
          script: |
            console.log(context)
            core.setOutput('sha', context.sha)
            core.setOutput('ref', context.ref)
      - uses: actions/github-script@v6
        id: create-tmp-branch
        env:
          SHA: ${{ steps.requirements.outputs.sha }}
          REF: ${{ steps.requirements.outputs.ref }}
        with:
          script: |
            console.log(process.env.SHA)
            console.log(process.env.REF)
            const ref = process.env.REF

            regexp = /(refs\/heads\/)(.+)/g
            const pieces = [...ref.matchAll(regexp)]

            firstPart = pieces[0][1]
            secondPart = pieces[0][2]

            randomPart = `tmp-${context.runId}-${context.runNumber}-`
            tmpBranch = `${firstPart}${randomPart}${secondPart}`
            tmpBranchShort = `${randomPart}${secondPart}`

            core.setOutput('tmp-branch-name', tmpBranch)
            core.setOutput('tmp-branch-name-short', tmpBranchShort)
      # - name: Install GH CLI
      #   uses: dev-hanz-ops/install-gh-cli-action
      #   with:
      #       gh-cli-version: 2.32.0
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REF: ${{ steps.create-tmp-branch.outputs.tmp-branch-name }}
          SHA: ${{ steps.requirements.outputs.sha }}
        name: Trigger the manual workflow (could be local or remote repository)
        run: |
          gh api \
          --method POST \
          -H 'Accept: application/vnd.github.v3+json' \
              /repos/rivetmichael/github-actions-playground/git/refs \
              -f ref=$REF \
              -f sha=$SHA

          gh workflow run manual.yaml -f branch_name=${REF} --ref ${REF}
      - name: Sleep for 20 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '20s'
      - name: Getting workflow data from branch ${{ steps.create-tmp-branch.outputs.tmp-branch-name-short }}
        uses: actions/github-script@v6
        id: getting-workflow-data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REF: ${{ steps.create-tmp-branch.outputs.tmp-branch-name-short }}
        with:
          retries: 3
          script: |
            const { REF } = process.env
            const wr = await github.rest.actions.listWorkflowRuns({
              owner: "rivetmichael",
              repo: "github-actions-playground",
              workflow_id: "manual.yaml",
              branch: `${REF}`
            })

            console.log(`ref: ${REF}`)
            console.log(wr.data.workflow_runs)
            console.log(wr.data.workflow_runs[0])
            console.log(wr.data.workflow_runs[0].name)
            console.log(wr.data.workflow_runs[0].html_url)

            core.setOutput('workflow_html_url', wr.data.workflow_runs[0].html_url)
            core.setOutput('workflow', wr.data.workflow_runs[0])

      - uses: WcAServices/markdown-template-action@v1.0.2
        name: Generating output
        with:
          variables: >-
            WORKFLOW="${{ steps.getting-workflow-data.outputs.workflow }}"
            WORKFLOW_HTML_URL="${{ steps.getting-workflow-data.outputs.workflow_html_url }}"
          template: |
            #### Workflow dispatch info:

            ##### Workflow URL
            ${WORKFLOW_HTML_URL}

            ##### Workflow payload
            ```yaml
            ${WORKFLOW}
            ```
